{"version":3,"file":"static/js/871.26f3128d.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/TrailerComponent/TrailerComponent.tsx","pages/MoviePage/MoviePage.tsx","hooks/useMovie.ts","hooks/useTrailer.ts"],"sourcesContent":["import React from 'react';\r\nimport { buttonIcons } from '../../config/dynamicIcons';\r\n\r\ninterface ButtonProps {\r\n    label: string;\r\n    onClick?: () => void;\r\n    variant?: 'primary' | 'secondary' | 'white';\r\n    type?: 'button' | 'submit' | 'reset';\r\n    icon?: keyof typeof buttonIcons;\r\n    iconVariant?: 'black' | 'white';\r\n    disabled?: boolean;\r\n    wide?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ \r\n    label, \r\n    onClick, \r\n    variant = 'primary',\r\n    iconVariant = 'black',\r\n    type = 'button',\r\n    icon,\r\n    disabled,\r\n    wide\r\n}) => {\r\n    const buttonStyles = {\r\n        primary: `${wide && 'w-full'} bg-red-default hover:bg-red-secondary text-text-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n        secondary: `${wide && 'w-full'} bg-gray-secondary hover:bg-bg-hover text-text-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n        white: `${wide && 'w-full'} bg-white hover:bg-bg-hover text-black-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n    };\r\n    const iconStyles = {\r\n        black: 'w-5 h-5 fill-text-default inline-block',\r\n        white: 'w-5 h-5 fill-text-default inline-block',\r\n    }\r\n    const styles = {\r\n        backgroundColor: disabled ? '#d1d5db' : '',\r\n        color: disabled ? '#222222' : '',\r\n      };\r\n    let Icon: React.FunctionComponent<React.SVGProps<SVGSVGElement>> | null;\r\n    icon ? Icon = buttonIcons[icon] : Icon = null;\r\n    return (\r\n        <button\r\n            type={type}\r\n            className={buttonStyles[variant]}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            style={styles}\r\n        >   \r\n            {icon && Icon && <Icon className={iconStyles[iconVariant]} />}\r\n            {label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","interface ITrailerComponent {\r\n  src: string;\r\n  title: string;\r\n  isError: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst TrailerComponent:React.FC<ITrailerComponent> = ({src, title, isError, isLoading}) => {\r\n\r\n  if (isError) return <div>Error fetching trailer</div>;\r\n  if (isLoading) return <div>Loading trailer...</div>;\r\n\r\n  return (\r\n    <div className=\"w-full h-[300px] md:h-[500px] px-5 md:px-10 my-20\">\r\n      <iframe\r\n        src={`https://www.youtube.com/embed/${src}`} \r\n        title={title}\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n        allowFullScreen\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      ></iframe>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TrailerComponent;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useMobile from \"../../hooks/useMobile\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport TrailerComponent from \"../../components/TrailerComponent/TrailerComponent\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Film } from \"../../types/global\";\r\nimport { addMovieToWatchList, initFirebase, removeMovieFromWatchList } from \"../../helpers/firebaseUtils\";\r\nimport { doc, updateDoc } from \"firebase/firestore\";\r\nimport { useDbUser } from \"../../hooks/useDbUser\";\r\nimport { useMovie } from \"../../hooks/useMovie\";\r\nimport { useTrailer } from \"../../hooks/useTrailer\";\r\n\r\n// button status is not updating\r\n\r\nconst MoviePage = () => {\r\n\tconst { movieId } = useParams<{ movieId: string }>();\r\n\tconst [id, setId] = useState<string>()\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [lang, setLang] = useState(i18n.language);\r\n\tconst isMobile = useMobile();\r\n\tconst { userLoggedIn } = useAuth();\r\n\tconst [inList, setInlist] = useState<boolean>(false);\r\n\tconst { data: additionalUser } = useDbUser();\r\n\tconst { data, isError, isLoading } = useMovie(lang, id);\r\n\tconst { data: trailersData, isError: trailerError, isLoading: trailerLoading } = useTrailer(lang, id);\r\n\r\n\tconst updateInList = (list: Film[], movieId: string) => {\r\n\t\tconst movieInList = list.find((m) => m.id.toString() === movieId);\r\n\t\tmovieInList\r\n\t\t\t? setInlist(true)\r\n\t\t\t: setInlist(false)\r\n\t}\r\n\t\r\n\tconst onClick = async () => {\r\n\t\tif (additionalUser && data) {\r\n\t\t\tconst movieData = {\r\n\t\t\t\t...data,\r\n\t\t\t\tgenre_ids: [data.genres[0].id],\r\n\t\t\t}\r\n\t\t\tconst { db } = await initFirebase();\r\n\t\t\tconst docRef = doc(db, \"users\", additionalUser.docId);\r\n\t\t\tconst userWatchList = additionalUser.watchList;\r\n\t\t\tlet updatedList: Film[] = []\r\n\t\t\tinList\r\n\t\t\t\t? updatedList = removeMovieFromWatchList(userWatchList, movieData)\r\n\t\t\t\t: updatedList = addMovieToWatchList(userWatchList, movieData)\r\n\t\t\ttry {\r\n\t\t\t\tawait updateDoc(docRef, {\r\n\t\t\t\t\twatchList: updatedList\r\n\t\t\t\t});\r\n\t\t\t\tupdateInList(updatedList, movieData.id);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"Error when trying to add movie to watchlist: \" + error)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst trailer = trailersData?.results.find((t) => t.type === \"Trailer\");             \r\n\r\n\tuseEffect(() => {\r\n\t\tif (additionalUser && data) {\r\n\t\t\tupdateInList(additionalUser.watchList, data.id.toString());\r\n\t\t};\r\n\t}, [data, i18n.language, additionalUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (movieId) setId(movieId)\r\n\t}, [movieId])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLang(i18n.language);\r\n\t}, [i18n.language]);\r\n\r\n\tif (isLoading) return <div className=\"h-[130svh]\">Loading...</div>;\r\n\r\n\tif (isError || !data) \r\n\t\treturn <div>Error loading data or no data available</div>;\r\n\r\n\tconst { backdrop_path, poster_path, title, status, runtime, release_date, genres, overview } = data;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"h-[130svh] bg-black-black-absolute overflow-hidden\">\r\n        <div className=\"h-full w-full bg-cover bg-center z-10 overflow-hidden relative\"\r\n          style={{backgroundImage: `url(https://image.tmdb.org/t/p/original${\r\n\t\t\t\t\t\tisMobile ? poster_path : backdrop_path\r\n\t\t\t\t\t})`}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h2 className=\"absolute hidden md:inline-block pl-10 pt-10 text-4xl\">{title}</h2>\r\n\t\t\t\t\t<div className=\"absolute w-full bottom-0 left-0 mx-auto max-w-[1680px] pt-20\">\r\n\t\t\t\t\t\t<div className=\"flex flex-col md:flex-row gap-4 items-center md:items-start p-6 pb-3 md:p-10 md:pt-6\">\r\n\t\t\t\t\t\t\t<div className=\"absolute inset-0 w-full h-full backdrop-saturate-[190%] backdrop-blur-3xl -z-10 mask-gradient\"\r\n\t\t\t\t\t\t\t\tstyle={{backgroundColor: \"rgba(40, 40, 40, .5)\"}}\r\n\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t<div className=\"md:hidden max-w-[300px] text-text-default text-3xl text-center \">\r\n\t\t\t\t\t\t\t\t\t<h2>{title}</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"text-center text-text-secondary text-sm md:text-left md:min-w-[150px] md:order-2\">\r\n\t\t\t\t\t\t\t\t\t{genres.length > 0 && \r\n\t\t\t\t\t\t\t\t\t\t<span>{genres[0].name} </span>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<span>{status} </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"whitespace-nowrap\">{release_date} </span>\r\n\t\t\t\t\t\t\t\t\t<span>{runtime  + t('min')}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{userLoggedIn && \t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"md:order-1 min-w-[150px] \">\r\n\t\t\t\t\t\t\t\t\t\t<Button label={inList ? t('inWatchlist') : t('toWatchlist')} onClick={onClick} variant=\"white\"></Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className=\"text-text-secondary order-3\">\r\n\t\t\t\t\t\t\t\t\t<span>{overview}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n        </div>        \r\n\t\t\t</div>\r\n\t\t\t{trailer &&\r\n\t\t\t\t<TrailerComponent src={trailer.key} title={trailer.name} isError={trailerError} isLoading={trailerLoading} />\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MoviePage;\r\n","import { useQuery } from \"react-query\";\r\nimport { dataFetch } from \"../helpers/fetchUtils\";\r\nimport { Movie } from \"../types/global\";\r\nimport { fetchMovies } from \"../api/MoviesApi\";\r\n\r\nexport const useMovie = ( lang: string, id?: string ) => {\r\n\tlet options = {};\r\n\tif (id) options = fetchMovies(1, lang, id);\r\n\r\n\treturn useQuery<Movie>([\"movieData\", 1, lang, id], () => dataFetch(options), {\r\n\t\trefetchOnWindowFocus: false,\r\n\t});\r\n};\r\n","import { useQuery } from \"react-query\";\r\nimport { dataFetch } from \"../helpers/fetchUtils\";\r\nimport { Trailer } from \"../types/global\";\r\nimport { fetchTrailer } from \"../api/MoviesApi\";\r\n\r\nexport const useTrailer = (lang: string, id?: string) => {\r\n\tlet trailerOptions = {};\r\n\tif (id) trailerOptions = fetchTrailer(id, lang);\r\n\r\n\treturn useQuery<{ results: Trailer[] }>(\r\n\t\t[\"trailersData\", lang, trailerOptions],\r\n\t\t() => dataFetch(trailerOptions),\r\n\t\t{\r\n\t\t\tenabled: !!trailerOptions,\r\n\t\t\trefetchOnWindowFocus: false,\r\n\t\t}\r\n\t);\r\n};\r\n"],"names":["_ref","Icon","label","onClick","_ref$variant","variant","_ref$iconVariant","iconVariant","_ref$type","type","icon","disabled","wide","buttonStyles","primary","concat","secondary","white","styles","backgroundColor","color","buttonIcons","_jsxs","className","style","children","_jsx","black","src","title","isError","isLoading","allow","allowFullScreen","width","height","movieId","useParams","_useState","useState","_useState2","_slicedToArray","id","setId","_useTranslation","useTranslation","t","i18n","_useState3","language","_useState4","lang","setLang","isMobile","useMobile","userLoggedIn","useAuth","_useState5","_useState6","inList","setInlist","additionalUser","useDbUser","data","_useMovie","options","fetchMovies","useQuery","dataFetch","refetchOnWindowFocus","useMovie","_useTrailer","trailerOptions","fetchTrailer","enabled","useTrailer","trailersData","trailerError","trailerLoading","updateInList","list","movieInList","find","m","toString","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieData","_yield$initFirebase","db","docRef","userWatchList","updatedList","wrap","_context","prev","next","_objectSpread","genre_ids","genres","initFirebase","sent","doc","docId","watchList","removeMovieFromWatchList","addMovieToWatchList","updateDoc","t0","console","log","stop","apply","arguments","trailer","results","useEffect","backdrop_path","poster_path","status","runtime","release_date","overview","backgroundImage","length","name","Button","TrailerComponent","key"],"sourceRoot":""}