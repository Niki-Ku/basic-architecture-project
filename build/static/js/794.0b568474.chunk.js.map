{"version":3,"file":"static/js/794.0b568474.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/ResetPasswordForm/ResetPasswordForm.tsx","components/PasswordSentDisplay/PasswordSentDisplay.tsx","pages/ResetPasswordPage/ResetPasswordPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { buttonIcons } from '../../config/dynamicIcons';\r\n\r\ninterface ButtonProps {\r\n    label: string;\r\n    onClick?: () => void;\r\n    variant?: 'primary' | 'secondary' | 'white';\r\n    type?: 'button' | 'submit' | 'reset';\r\n    icon?: keyof typeof buttonIcons;\r\n    iconVariant?: 'black' | 'white';\r\n    disabled?: boolean;\r\n    wide?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ \r\n    label, \r\n    onClick, \r\n    variant = 'primary',\r\n    iconVariant = 'black',\r\n    type = 'button',\r\n    icon,\r\n    disabled,\r\n    wide\r\n}) => {\r\n    const buttonStyles = {\r\n        primary: `${wide && 'w-full'} bg-red-default hover:bg-red-secondary text-text-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n        secondary: `${wide && 'w-full'} bg-gray-secondary hover:bg-bg-hover text-text-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n        white: `${wide && 'w-full'} bg-white hover:bg-bg-hover text-black-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n    };\r\n    const iconStyles = {\r\n        black: 'w-5 h-5 fill-text-default inline-block',\r\n        white: 'w-5 h-5 fill-text-default inline-block',\r\n    }\r\n    const styles = {\r\n        backgroundColor: disabled ? '#d1d5db' : '',\r\n        color: disabled ? '#222222' : '',\r\n      };\r\n    let Icon: React.FunctionComponent<React.SVGProps<SVGSVGElement>> | null;\r\n    icon ? Icon = buttonIcons[icon] : Icon = null;\r\n    return (\r\n        <button\r\n            type={type}\r\n            className={buttonStyles[variant]}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            style={styles}\r\n        >   \r\n            {icon && Icon && <Icon className={iconStyles[iconVariant]} />}\r\n            {label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { t } from \"i18next\";\r\nimport { SetStateAction, useState } from \"react\";\r\nimport { doPasswordReset } from \"../../services/firebaseAuth\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst ResetPasswordForm = ({setIsSendReset} : {setIsSendReset : React.Dispatch<SetStateAction<boolean>>}) => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [error, setError] = useState(\"\");\r\n\r\n\tconst handleSubmit = async (e: React.FormEvent) => {\r\n\t\te.preventDefault();\r\n\t\tif (email) {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait doPasswordReset(email);\r\n\t\t\t\tsetIsSendReset(true);\r\n\t\t\t} catch (error: any) {\r\n\t\t\t\tsetError(error.code);\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n  };\r\n  \r\n  if (loading) return <div>{t(\"loading\")}</div>;\r\n  \r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} className=\"flex flex-col gap-2\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={email}\r\n\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\tplaceholder={t(\"email\")}\r\n\t\t\t\taria-label={t(\"email\")}\r\n\t\t\t\tclassName=\"w-full h-10 border px-4 rounded bg-transparent border-bg-hover\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t\t<div className=\"text-red-default font-light text-sm\">\r\n\t\t\t\t{error && <span>{t(error)}</span>}\r\n\t\t\t</div>\r\n\t\t\t<Button label={t(\"send\")} type=\"submit\" />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","import { t } from \"i18next\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PasswordSentDisplay = () => {\r\n\treturn (\r\n\t\t<div className=\"pt-10\">\r\n\t\t\t<p className=\"text-lg\">{t(\"we-sent-you-letter\")}</p>\r\n\t\t\t<Link\r\n\t\t\t\tclassName=\"text-blue-500 hover:underline pt-4 inline-block\"\r\n\t\t\t\tto=\"/login\"\r\n\t\t\t\tonClick={() => window.scrollTo({ top: 0 })}\r\n\t\t\t>\r\n\t\t\t\t{t(\"back-to-login-page\")}\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PasswordSentDisplay;\r\n","import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ResetPasswordForm from \"../../components/ResetPasswordForm/ResetPasswordForm\";\r\nimport PasswordSentDisplay from \"../../components/PasswordSentDisplay/PasswordSentDisplay\";\r\n\r\nconst ResetPasswordPage = () => {\r\n\tconst { t } = useTranslation();\r\n\tconst [isSendReset, setIsSendReset] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"relative\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"\r\n        w-full h-[calc(100svh-70px)] md:h-[calc(100svh-78px)] min-h-[550px]\r\n        sm:bg-posters absolute\"\r\n\t\t\t></div>\r\n\t\t\t<div className=\"w-full h-[calc(100svh-70px)] min-h-[550px]\">\r\n\t\t\t\t<div className=\"w-full h-[calc(100svh-70px)] sm:rounded sm:h-[500px] sm:mt-10 sm:w-[450px] mx-auto px-[5%] bg-black-default sm:bg-black-70 z-10 relative\">\r\n\t\t\t\t\t{isSendReset ? (\r\n\t\t\t\t\t\t<PasswordSentDisplay />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h1 className=\"text-2xl sm:pt-10 sm:text-4xl text-white\">\r\n\t\t\t\t\t\t\t\t{t(\"reset-password\")}\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t<p className=\"my-4\">{t(\"we-will-send-you-letter\")}</p>\r\n\t\t\t\t\t\t\t<ResetPasswordForm setIsSendReset={setIsSendReset} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n"],"names":["_ref","Icon","label","onClick","_ref$variant","variant","_ref$iconVariant","iconVariant","_ref$type","type","icon","disabled","wide","buttonStyles","primary","concat","secondary","white","styles","backgroundColor","color","buttonIcons","_jsxs","className","style","children","_jsx","black","setIsSendReset","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","email","setEmail","_useState5","_useState6","error","setError","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","doPasswordReset","t0","code","console","log","finish","stop","_x","apply","arguments","t","onSubmit","value","onChange","target","placeholder","required","Button","Link","to","window","scrollTo","top","useTranslation","isSendReset","PasswordSentDisplay","ResetPasswordForm"],"sourceRoot":""}