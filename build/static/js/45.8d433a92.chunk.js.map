{"version":3,"file":"static/js/45.8d433a92.chunk.js","mappings":"mIAqDA,IAvCsC,SAAHA,GAS5B,IAcCC,EAtBJC,EAAKF,EAALE,MACAC,EAAOH,EAAPG,QAAOC,EAAAJ,EACPK,QAAAA,OAAO,IAAAD,EAAG,UAASA,EAAAE,EAAAN,EACnBO,YAAAA,OAAW,IAAAD,EAAG,QAAOA,EAAAE,EAAAR,EACrBS,KAAAA,OAAI,IAAAD,EAAG,SAAQA,EACfE,EAAIV,EAAJU,KACAC,EAAQX,EAARW,SACAC,EAAIZ,EAAJY,KAEMC,EAAe,CACjBC,QAAQ,GAADC,OAAKH,GAAQ,SAAQ,4HAC5BI,UAAU,GAADD,OAAKH,GAAQ,SAAQ,0HAC9BK,MAAM,GAADF,OAAKH,GAAQ,SAAQ,mHAMxBM,EAAS,CACXC,gBAAiBR,EAAW,UAAY,GACxCS,MAAOT,EAAW,UAAY,IAIlC,OADOV,EAAPS,EAAcW,EAAAA,GAAYX,GAAe,MAErCY,EAAAA,EAAAA,MAAA,UACIb,KAAMA,EACNc,UAAWV,EAAaR,GACxBF,QAASA,EACTQ,SAAUA,EACVa,MAAON,EAAOO,SAAA,CAEbf,GAAQT,IAAQyB,EAAAA,EAAAA,KAACzB,EAAI,CAACsB,UAlBZ,CACfI,MAAO,yCACPV,MAAO,0CAgB0CV,KAC5CL,IAGb,C,yECpBA,UA3BkB,WACjB,IAAQ0B,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACCN,EAAAA,EAAAA,MAAA,OACCC,UAAU,6MAGmCE,SAAA,EAE7CH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCE,SAAA,EACtDC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,qCAAoCE,SAChDG,EAAE,4BAEJF,EAAAA,EAAAA,KAAA,KAAGH,UAAU,eAAcE,SAAEG,EAAE,4BAC/BF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,IAAGN,UACXC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAAC3B,QAAQ,QAAQH,MAAK,WAAAa,OAAaa,EAAE,iBAG9CF,EAAAA,EAAAA,KAAA,OAAAD,UACCH,EAAAA,EAAAA,MAAA,KAAGC,UAAU,qEAAoEE,SAAA,CAC/EG,EAAE,uBAAuB,KAACF,EAAAA,EAAAA,KAAA,QAAMH,UAAU,gBAAeE,SAAC,eAKhE,C","sources":["components/Button/Button.tsx","pages/ErrorPage/ErrorPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { buttonIcons } from '../../config/dynamicIcons';\r\n\r\ninterface ButtonProps {\r\n    label: string;\r\n    onClick?: () => void;\r\n    variant?: 'primary' | 'secondary' | 'white';\r\n    type?: 'button' | 'submit' | 'reset';\r\n    icon?: keyof typeof buttonIcons;\r\n    iconVariant?: 'black' | 'white';\r\n    disabled?: boolean;\r\n    wide?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ \r\n    label, \r\n    onClick, \r\n    variant = 'primary',\r\n    iconVariant = 'black',\r\n    type = 'button',\r\n    icon,\r\n    disabled,\r\n    wide\r\n}) => {\r\n    const buttonStyles = {\r\n        primary: `${wide && 'w-full'} bg-red-default hover:bg-red-secondary text-text-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n        secondary: `${wide && 'w-full'} bg-gray-secondary hover:bg-bg-hover text-text-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n        white: `${wide && 'w-full'} bg-white hover:bg-bg-hover text-black-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n    };\r\n    const iconStyles = {\r\n        black: 'w-5 h-5 fill-text-default inline-block',\r\n        white: 'w-5 h-5 fill-text-default inline-block',\r\n    }\r\n    const styles = {\r\n        backgroundColor: disabled ? '#d1d5db' : '',\r\n        color: disabled ? '#222222' : '',\r\n      };\r\n    let Icon: React.FunctionComponent<React.SVGProps<SVGSVGElement>> | null;\r\n    icon ? Icon = buttonIcons[icon] : Icon = null;\r\n    return (\r\n        <button\r\n            type={type}\r\n            className={buttonStyles[variant]}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            style={styles}\r\n        >   \r\n            {icon && Icon && <Icon className={iconStyles[iconVariant]} />}\r\n            {label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"../../components/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ErrorPage = () => {\r\n\tconst { t } = useTranslation();\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"\r\n      w-full h-[calc(100svh-70px)] md:h-[calc(100svh-78px)]\r\n      bg-error-image bg-[#000] bg-blend-multiply bg-opacity-10 bg-no-repeat bg-cover bg-center text-white\r\n      flex justify-center items-center flex-col\"\r\n\t\t>\r\n\t\t\t<div className=\"text-center max-w-[90%] sm:max-w-[60%]\">\r\n\t\t\t\t<h1 className=\"text-4xl md:text-6xl font-semibold\">\r\n\t\t\t\t\t{t(\"errorPage.lostYourWay\")}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<p className=\"text-xl my-5\">{t(\"errorPage.description\")}</p>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<Button variant=\"white\" label={`Netflix ${t('home')}`}></Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<p className=\"mt-10 border-l-2 border-red-default text-xl md:text-2xl font-light\">\r\n\t\t\t\t\t{t(\"errorPage.errorCode\")} <span className=\"font-semibold\">404</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ErrorPage;\r\n"],"names":["_ref","Icon","label","onClick","_ref$variant","variant","_ref$iconVariant","iconVariant","_ref$type","type","icon","disabled","wide","buttonStyles","primary","concat","secondary","white","styles","backgroundColor","color","buttonIcons","_jsxs","className","style","children","_jsx","black","t","useTranslation","Link","to","Button"],"sourceRoot":""}