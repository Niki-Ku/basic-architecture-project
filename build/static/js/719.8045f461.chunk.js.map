{"version":3,"file":"static/js/719.8045f461.chunk.js","mappings":"oIAqDA,IAvCsC,SAAHA,GAS5B,IAcCC,EAtBJC,EAAKF,EAALE,MACAC,EAAOH,EAAPG,QAAOC,EAAAJ,EACPK,QAAAA,OAAO,IAAAD,EAAG,UAASA,EAAAE,EAAAN,EACnBO,YAAAA,OAAW,IAAAD,EAAG,QAAOA,EAAAE,EAAAR,EACrBS,KAAAA,OAAI,IAAAD,EAAG,SAAQA,EACfE,EAAIV,EAAJU,KACAC,EAAQX,EAARW,SACAC,EAAIZ,EAAJY,KAEMC,EAAe,CACjBC,QAAQ,GAADC,OAAKH,GAAQ,SAAQ,4HAC5BI,UAAU,GAADD,OAAKH,GAAQ,SAAQ,0HAC9BK,MAAM,GAADF,OAAKH,GAAQ,SAAQ,mHAMxBM,EAAS,CACXC,gBAAiBR,EAAW,UAAY,GACxCS,MAAOT,EAAW,UAAY,IAIlC,OADOV,EAAPS,EAAcW,EAAAA,GAAYX,GAAe,MAErCY,EAAAA,EAAAA,MAAA,UACIb,KAAMA,EACNc,UAAWV,EAAaR,GACxBF,QAASA,EACTQ,SAAUA,EACVa,MAAON,EAAOO,SAAA,CAEbf,GAAQT,IAAQyB,EAAAA,EAAAA,KAACzB,EAAI,CAACsB,UAlBZ,CACfI,MAAO,yCACPV,MAAO,0CAgB0CV,KAC5CL,IAGb,C,+DCvBA,UApBgE,SAAHF,GAA2C,IAArC4B,EAAa5B,EAAb4B,cAAeC,EAAc7B,EAAd6B,eACxEC,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACER,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iEAAgEE,SAAA,EAC7EC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,oBAAmBE,SAAEK,EAAE,yBACrCJ,EAAAA,EAAAA,KAAA,KAAAD,SACGK,EAAE,wBAELR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAME,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,OAAME,UACpBC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAAC9B,MAAO4B,EAAE,UAAW3B,QAASyB,OAEvCF,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAAC9B,MAAO4B,EAAE,WAAYzB,QAAQ,YAAYF,QAAS0B,WAKpE,C","sources":["components/Button/Button.tsx","components/CookieConsentBanner/CookieConsentBanner.tsx"],"sourcesContent":["import React from 'react';\r\nimport { buttonIcons } from '../../config/dynamicIcons';\r\n\r\ninterface ButtonProps {\r\n    label: string;\r\n    onClick?: () => void;\r\n    variant?: 'primary' | 'secondary' | 'white';\r\n    type?: 'button' | 'submit' | 'reset';\r\n    icon?: keyof typeof buttonIcons;\r\n    iconVariant?: 'black' | 'white';\r\n    disabled?: boolean;\r\n    wide?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ \r\n    label, \r\n    onClick, \r\n    variant = 'primary',\r\n    iconVariant = 'black',\r\n    type = 'button',\r\n    icon,\r\n    disabled,\r\n    wide\r\n}) => {\r\n    const buttonStyles = {\r\n        primary: `${wide && 'w-full'} bg-red-default hover:bg-red-secondary text-text-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n        secondary: `${wide && 'w-full'} bg-gray-secondary hover:bg-bg-hover text-text-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n        white: `${wide && 'w-full'} bg-white hover:bg-bg-hover text-black-default py-2 px-4 rounded inline-flex justify-center items-center gap-2`,\r\n    };\r\n    const iconStyles = {\r\n        black: 'w-5 h-5 fill-text-default inline-block',\r\n        white: 'w-5 h-5 fill-text-default inline-block',\r\n    }\r\n    const styles = {\r\n        backgroundColor: disabled ? '#d1d5db' : '',\r\n        color: disabled ? '#222222' : '',\r\n      };\r\n    let Icon: React.FunctionComponent<React.SVGProps<SVGSVGElement>> | null;\r\n    icon ? Icon = buttonIcons[icon] : Icon = null;\r\n    return (\r\n        <button\r\n            type={type}\r\n            className={buttonStyles[variant]}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            style={styles}\r\n        >   \r\n            {icon && Icon && <Icon className={iconStyles[iconVariant]} />}\r\n            {label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport Button from \"../Button/Button\";\r\n\r\ninterface CookieConsentBannerProps {\r\n  onAcceptClick: () => void;\r\n  onDeclineClick: () => void;\r\n}\r\n\r\nconst CookieConsentBanner: React.FC<CookieConsentBannerProps> = ({ onAcceptClick, onDeclineClick }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"bg-white z-[1000] text-black-default p-2 fixed left-0 bottom-0\">\r\n      <h3 className=\"text-xl font-bold\">{t('weValueYourPrivacy')}</h3>\r\n      <p>\r\n        {t('cookieUsageNotice')}\r\n      </p>\r\n      <div className=\"mt-4\">\r\n        <span className=\"mr-2\">\r\n          <Button label={t(\"accept\")} onClick={onAcceptClick}></Button>\r\n        </span>\r\n        <span>\r\n          <Button label={t(\"decline\")} variant=\"secondary\" onClick={onDeclineClick}></Button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CookieConsentBanner;\r\n"],"names":["_ref","Icon","label","onClick","_ref$variant","variant","_ref$iconVariant","iconVariant","_ref$type","type","icon","disabled","wide","buttonStyles","primary","concat","secondary","white","styles","backgroundColor","color","buttonIcons","_jsxs","className","style","children","_jsx","black","onAcceptClick","onDeclineClick","t","useTranslation","Button"],"sourceRoot":""}