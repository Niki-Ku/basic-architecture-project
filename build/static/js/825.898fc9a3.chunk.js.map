{"version":3,"file":"static/js/825.898fc9a3.chunk.js","mappings":"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","sources":["../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/global.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/query.ts","../node_modules/@firebase/util/src/subscribe.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/firebaseServerApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\n// TODO(dlarocque): Define this as a class, since we no longer target ES5.\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Type placeholder for `WorkerGlobalScope` from `webworker`\n */\ndeclare class WorkerGlobalScope {}\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment.\n * Note: This will return true for certain test frameworks that are incompletely\n * mimicking a browser, and should not lead to assuming all browser APIs are\n * available.\n */\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined' || isWebWorker();\n}\n\n/**\n * Detect Web Worker context.\n */\nexport function isWebWorker(): boolean {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    typeof self !== 'undefined' &&\n    self instanceof WorkerGlobalScope\n  );\n}\n\n/**\n * Detect Cloudflare Worker context.\n */\nexport function isCloudflareWorker(): boolean {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.userAgent === 'Cloudflare-Workers'\n  );\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // TypeScript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    //                   which we can now use since we no longer target ES5.\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber synchronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as dataconnectName } from '../../../packages/data-connect/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [dataconnectName]: 'fire-data-connect',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppSettings,\n  FirebaseServerApp,\n  FirebaseServerAppSettings,\n  FirebaseOptions\n} from './public-types';\nimport { deleteApp, registerVersion } from './api';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { name as packageName, version } from '../package.json';\n\nexport class FirebaseServerAppImpl\n  extends FirebaseAppImpl\n  implements FirebaseServerApp\n{\n  private readonly _serverConfig: FirebaseServerAppSettings;\n  private _finalizationRegistry: FinalizationRegistry<object> | null;\n  private _refCount: number;\n\n  constructor(\n    options: FirebaseOptions | FirebaseAppImpl,\n    serverConfig: FirebaseServerAppSettings,\n    name: string,\n    container: ComponentContainer\n  ) {\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    const automaticDataCollectionEnabled =\n      serverConfig.automaticDataCollectionEnabled !== undefined\n        ? serverConfig.automaticDataCollectionEnabled\n        : false;\n\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    const config: Required<FirebaseAppSettings> = {\n      name,\n      automaticDataCollectionEnabled\n    };\n\n    if ((options as FirebaseOptions).apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      super(options as FirebaseOptions, config, container);\n    } else {\n      const appImpl: FirebaseAppImpl = options as FirebaseAppImpl;\n      super(appImpl.options, config, container);\n    }\n\n    // Now construct the data for the FirebaseServerAppImpl.\n    this._serverConfig = {\n      automaticDataCollectionEnabled,\n      ...serverConfig\n    };\n\n    this._finalizationRegistry = null;\n    if (typeof FinalizationRegistry !== 'undefined') {\n      this._finalizationRegistry = new FinalizationRegistry(() => {\n        this.automaticCleanup();\n      });\n    }\n\n    this._refCount = 0;\n    this.incRefCount(this._serverConfig.releaseOnDeref);\n\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n    // will never trigger.\n    this._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n\n    registerVersion(packageName, version, 'serverapp');\n  }\n\n  toJSON(): undefined {\n    return undefined;\n  }\n\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  // Increment the reference count of this server app. If an object is provided, register it\n  // with the finalization registry.\n  incRefCount(obj: object | undefined): void {\n    if (this.isDeleted) {\n      return;\n    }\n    this._refCount++;\n    if (obj !== undefined && this._finalizationRegistry !== null) {\n      this._finalizationRegistry.register(obj, this);\n    }\n  }\n\n  // Decrement the reference count.\n  decRefCount(): number {\n    if (this.isDeleted) {\n      return 0;\n    }\n    return --this._refCount;\n  }\n\n  // Invoked by the FinalizationRegistry callback to note that this app should go through its\n  // reference counts and delete itself if no reference count remain. The coordinating logic that\n  // handles this is in deleteApp(...).\n  private automaticCleanup(): void {\n    void deleteApp(this);\n  }\n\n  get settings(): FirebaseServerAppSettings {\n    this.checkDestroyed();\n    return this._serverConfig;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.SERVER_APP_DELETED);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport {\n  deepEqual,\n  getDefaultAppConfig,\n  isBrowser,\n  isWebWorker\n} from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser() && !isWebWorker()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\nimport { logger } from './logger';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (heartbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    try {\n      const platformLogger = this.container\n        .getProvider('platform-logger')\n        .getImmediate();\n\n      // This is the \"Firebase user agent\" string from the platform logger\n      // service, not the browser user agent.\n      const agent = platformLogger.getPlatformInfoString();\n      const date = getUTCDateString();\n      if (this._heartbeatsCache?.heartbeats == null) {\n        this._heartbeatsCache = await this._heartbeatsCachePromise;\n        // If we failed to construct a heartbeats cache, then return immediately.\n        if (this._heartbeatsCache?.heartbeats == null) {\n          return;\n        }\n      }\n      // Do not store a heartbeat if one is already stored for this day\n      // or if a header has already been sent today.\n      if (\n        this._heartbeatsCache.lastSentHeartbeatDate === date ||\n        this._heartbeatsCache.heartbeats.some(\n          singleDateHeartbeat => singleDateHeartbeat.date === date\n        )\n      ) {\n        return;\n      } else {\n        // There is no entry for this date. Create one.\n        this._heartbeatsCache.heartbeats.push({ date, agent });\n      }\n      // Remove entries older than 30 days.\n      this._heartbeatsCache.heartbeats =\n        this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\n          const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n          const now = Date.now();\n          return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n        });\n      return this._storage.overwrite(this._heartbeatsCache);\n    } catch (e) {\n      logger.warn(e);\n    }\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    try {\n      if (this._heartbeatsCache === null) {\n        await this._heartbeatsCachePromise;\n      }\n      // If it's still null or the array is empty, there is no data to send.\n      if (\n        this._heartbeatsCache?.heartbeats == null ||\n        this._heartbeatsCache.heartbeats.length === 0\n      ) {\n        return '';\n      }\n      const date = getUTCDateString();\n      // Extract as many heartbeats from the cache as will fit under the size limit.\n      const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n        this._heartbeatsCache.heartbeats\n      );\n      const headerString = base64urlEncodeWithoutPadding(\n        JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n      );\n      // Store last sent date to prevent another being logged/sent for the same day.\n      this._heartbeatsCache.lastSentHeartbeatDate = date;\n      if (unsentEntries.length > 0) {\n        // Store any unsent entries if they exist.\n        this._heartbeatsCache.heartbeats = unsentEntries;\n        // This seems more likely than emptying the array (below) to lead to some odd state\n        // since the cache isn't empty and this will be called again on the next request,\n        // and is probably safest if we await it.\n        await this._storage.overwrite(this._heartbeatsCache);\n      } else {\n        this._heartbeatsCache.heartbeats = [];\n        // Do not wait for this, to reduce latency.\n        void this._storage.overwrite(this._heartbeatsCache);\n      }\n      return headerString;\n    } catch (e) {\n      logger.warn(e);\n      return '';\n    }\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n"],"names":["stringToByteArray$1","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","_Error","_inherits","_super","_createSuper","_this","_classCallCheck","name","_createClass","_wrapNativeSuper","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","concat","getDefaultEmulatorHost","productName","_a","_b","emulatorHosts","getDefaultEmulatorHostnameAndPort","host","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","getExperimentalSetting","Deferred","_this2","reject","resolve","promise","Promise","key","value","callback","_this3","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","Object","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","getUA","navigator","isMobileCordova","test","isBrowser","isWebWorker","WorkerGlobalScope","isCloudflareWorker","userAgent","isBrowserExtension","runtime","chrome","browser","undefined","id","isReactNative","isIE","ua","indexOf","isSafari","forceEnvironment","prototype","toString","call","isNode","includes","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","FirebaseError","_Error2","_super2","code","customData","_this4","setPrototypeOf","_assertThisInitialized","captureStackTrace","ErrorFactory","create","service","serviceName","errors","arguments","fullCode","template","data","PATTERN","_","replaceTemplate","fullMessage","isEmpty","obj","hasOwnProperty","deepEqual","a","b","aKeys","keys","bKeys","_i","_aKeys","k","aProp","bProp","isObject","_i2","_bKeys","thing","querystring","querystringParams","params","_loop","_Object$entries$_i","_slicedToArray","_Object$entries","_i3","forEach","arrayVal","encodeURIComponent","entries","querystringDecode","split","_token$split","_token$split2","decodeURIComponent","extractQuerystring","url","queryStart","fragmentStart","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","_this5","observers","unsubscribes","observerCount","task","finalized","then","forEachObserver","observer","next","complete","nextOrObserver","_this6","methods","_step","_iterator","_createForOfIteratorHelper","s","n","done","method","err","f","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","fn","sendOne","_this7","_this8","getModularInstance","_delegate","idbProxyableTypes","cursorAdvanceMethods","instanceOfAny","object","constructors","some","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","get","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","set","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","_len2","args","_key2","apply","unwrap","_len3","_key3","storeNames","_len","_key","tx","sort","transformCachableValue","unlisten","removeEventListener","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","storeName","_target","_args","_context","prev","store","index","shift","all","abrupt","sent","stop","_x","oldTraps","_objectSpread","PlatformLoggerServiceImpl","container","getProviders","map","provider","component","getComponent","isVersionServiceProvider","getImmediate","library","version","filter","logString","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_PLATFORM_LOG_STRING","_defineProperty","name$q","_apps","_serverApps","_components","_addComponent","app","addComponent","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","values","_step2","_iterator2","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","clearInstance","_isFirebaseApp","options","_isFirebaseServerApp","settings","_clearComponents","clear","ERRORS","_ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","checkDestroyed","val","isDeleted","appName","FirebaseServerAppImpl","_FirebaseAppImpl","serverConfig","apiKey","appImpl","_serverConfig","_finalizationRegistry","FinalizationRegistry","automaticCleanup","_refCount","incRefCount","releaseOnDeref","registerVersion","version$1","_possibleConstructorReturn","register","deleteApp","SDK_VERSION","initializeApp","rawConfig","existingApp","_step3","ComponentContainer","_iterator3","newApp","initializeServerApp","_serverAppConfig","appOptions","nameObj","nameString","_toConsumableArray","reduce","hash","Math","imul","_step4","_iterator4","getApp","getApps","from","_deleteApp","_callee7","cleanupProviders","_context7","delete","decRefCount","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","setLogLevel$1","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","_ref","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","_x2","_readHeartbeatsFromIndexedDB","_callee8","idbGetError","_context8","computeKey","t0","writeHeartbeatsToIndexedDB","_x3","_x4","_writeHeartbeatsToIndexedDB","_callee9","heartbeatObject","_context9","put","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_triggerHeartbeat","platformLogger","agent","date","getPlatformInfoString","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","_getHeartbeatsHeader","_callee2","_extractHeartbeatsFor","heartbeatsToSend","unsentEntries","headerString","_context2","extractHeartbeatsForHeader","toISOString","heartbeatsCache","_step5","maxSize","slice","_iterator5","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_runIndexedDBEnvironmentCheck","_callee3","_context3","_read","_callee4","idbHeartbeatObject","_context4","_callee5","heartbeatsObject","existingHeartbeatsObject","_context5","_x5","_overwrite","_callee6","_context6","_x6","_add","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","mode","props","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","isComponentEager","_step$value","instanceDeferred","services","INTERNAL","_delete","_delete2","opts","_opts$options","isComponentSet","_step2$value","existingCallbacks","Set","add","existingInstance","callbacks","_ref$options","invokeOnInitCallbacks","providers","setComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","_ConsoleMethod","defaultLogHandler","logType","_console","_logLevel","_logHandler","_userLogHandler","TypeError","_len4","_key4","_len5","_key5","_len6","_key6","level","inst","customLogLevel","userLogHandler","_len7","_key7","arg","ignored","toLowerCase"],"sourceRoot":""}